/**
 * Copyright (C) 2013 Tokanagrammar Team
 *
 * This is a jigsaw-like puzzle game,
 * except each piece is token from a source file,
 * and the 'complete picture' is the program.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/**
 * Define a grammar for parsing simple (Java) source file
 *
 * (TODO: Doesn't have to be Java?)
 *
 * @author Vy Thao Nguyen
 */

options 
{
    // multiple instances are allowed
    STATIC = false ;
}

PARSER_BEGIN(GrammarParser)

package cs.umb.edu.parser;


class GrammarParser
{
    private static final char NOT_SET = 0;
    // TODO
}
PARSER_END(GrammarParser)

/**
 *
 * Mostly placeholder
 *
 */
void
start():
{
}
{
    // TODO:
    [<UPPER_CHAR>]
    {
        return;
    }
}


////////////////// TOKENS definition////////////////////////

SKIP: {" " | "\t"}
TOKEN:
{
 <UPPER_CHAR: (["A"-"Z"])>
}